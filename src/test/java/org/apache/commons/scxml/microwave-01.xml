<?xml version="1.0"?>
<!--
   Copyright 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<scxml xmlns="http://www.w3.org/2005/01/SCXML"
       version="1.0"
       initialstate="off">
  
  <!--  trivial microwave oven example -->
  <state id="off">
    <!-- off state -->
    <transition event="turn_on">
      <target next="on"/>
    </transition>
  </state>

  <state id="on">
    <initial>
      <transition>
        <target next="idle"/>
      </transition>
    </initial>

    <!-- on/pause state -->
    <onentry>
      <!-- we assume the cook_time is passed in as a context parameter -->
      <if cond="${empty cook_time}">
        <!-- default setting -->
        <var name="cook_time" expr="${5}"/>
      </if>
      <!-- again, door_closed should be a part of a global context -->
      <if cond="${empty door_closed}">
        <!-- default setting -->
        <var name="door_closed" expr="${true}"/>
      </if>
      <!-- timer variable -->
      <var name="timer" expr="${0}"/>
    </onentry>

    <transition event="turn_off">
        <target next="off"/>
    </transition>

    <transition cond="${timer ge cook_time}">
        <target next="off"/>
    </transition>

    <state id="idle">
      <transition cond="${door_closed}">
        <!-- default immediate transition -->
        <target next="cooking"/>
      </transition>  
      <transition event="door_close">
        <assign name="door_closed" expr="${true}"/>
        <!-- start cooking -->
        <target next="cooking"/>
      </transition>
    </state>

    <state id="cooking">
      <transition event="door_open">
        <assign name="door_closed" expr="${false}"/>
        <target next="idle"/>
      </transition> 
      <transition event="time">
        <assign name="timer" expr="${timer + 1}"/>
        <target next="cooking"/>
      </transition>
    </state>

  </state>

</scxml>
